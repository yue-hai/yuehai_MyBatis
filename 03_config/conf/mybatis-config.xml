<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">

<!-- 全局配置文件 -->

<configuration>

    <!--
        一、MyBatis 可以使用 properties 标签来引入外部 properties 配置文件的内容、
        1、resource：引入类路径下的资源
        2、url：引入网络路径或者磁盘路径下的资源
     -->
    <properties resource="druid.properties"></properties>

    <!--
        二、settings 是 MyBatis 中极为重要的调整设置，它们会改变 MyBatis 的运行时行为
        settings：用来设置每一个设置项
        1、name：设置项的名称
        2、value：设置项的值
     -->
    <settings>
        <!-- 开启自动驼峰命名规则映射 -->
        <setting name="mapUnderscoreToCamelCase" value="true"/>
    </settings>

    <!-- 三、typeAliases：别名处理器，可以为我们的 Java 类型起别名，别名不区分大小写 -->
    <typeAliases>
        <!-- typeAlias：为 Java 类型设置一个短的名字，可以方便我们引用某个类 -->
        <!-- type：指定要起别名的类型全类名，默认是类名小写；alias：自定义类的别名 -->
        <!-- <typeAlias type="com.yuehai.mybatis.bean.Employee" alias="employee" /> -->
        
        <!-- package：为某个包下的所有类批量起别名，就是类名小写 -->
        <!-- name：指定包名，为当前包以及所有后代包的每一个类都起一个默认的别名，类名小写 -->
        <!-- 批量起别名的情况下，使用 @Alias() 注解为某个类型指定新的别名，防止冲突 -->
        <package name="com.yuehai.mybatis.bean"/>
    </typeAliases>

    <!--
        四、environments：环境们，MyBatis 可以配置多种环境
        environment：配置一个具体的环境信息，id：指定当前环境的唯一标识，必须有 transactionManager 和 dataSource 标签
            1、transactionManager：事务管理器，type：事务管理器的类型
                ①、JDBC：使用了 JDBC 的提交和回滚设置，依赖于从数据源得到的连接来管理事务范围。JdbcTransactionFactory
                ②、MANAGED：不提交或回滚一个连接、让容器来管理事务的整个生命周期（比如 JEE 应用服务器的上下文）。ManagedTransactionFactory
                ③、自定义：实现TransactionFactory接口，type=全类名/别名
            2、dataSource：数据源，type：数据源的类型
                ①、UNPOOLED：不使用连接池，UnpooledDataSourceFactory
                ②、POOLED：使用连接池， PooledDataSourceFactory
                ③、JNDI： 在EJB 或应用服务器这类容器中查找指定的数据源
                ④、自定义：实现DataSourceFactory接口，定义数据源的获取方式。
            3、实际开发中我们使用Spring管理数据源，并进行事务控制的配置来覆盖上述配置
     -->
    <!-- 配置环境，数据库连接池，使用 MySql 数据库 -->
    <environments default="mysql">
        <!-- MySql -->
        <environment id="mysql">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
        <!-- Oracle -->
        <environment id="oracle">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${orcl.driver}"/>
                <property name="url" value="${orcl.url}"/>
                <property name="username" value="${orcl.username}"/>
                <property name="password" value="${orcl.password}"/>
            </dataSource>
        </environment>
    </environments>

    <!--
        5、databaseIdProvider：支持多数据库厂商的语句，需在 sql 映射文件中设置使用什么数据库
        type="DB_VENDOR"：得到数据库厂商的标识（驱动getDatabaseProductName()）来执行不同的 sql 语句
            property 标签：为不同的数据库厂商起别名
                MySql 数据库标识：MySQL
                Oracle 数据库标识：Oracle
                SQL Server 数据库标识：SQL Server
     -->
    <databaseIdProvider type="DB_VENDOR">
        <!-- 为不同的数据库厂商起别名 -->
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
        <property name="SQL Server" value="sqlServer"/>
    </databaseIdProvider>

    <!-- 6、mapper 映射：将我们写好的 sql 映射文件注册到全局配置文件中 -->
    <mappers>
        <!--
            mappers：注册一个 sql 映射
            注册配置文件：
                resource：引用类路径下的 sql 映射文件
                url：引用网络路径或磁盘路径下的 sql 映射文件
            注册接口：
                1、class：引用（注册）接口，sql 映射文件必须和接口同名，并且放在与接口同一目录下
                2、没有 sql 映射文件，所有的 sql 都是利用注解写在接口上
            推荐：比较重要的、复杂的 Dao 接口写 sql 映射文件
                 不重要的、简单的 Dao 接口为了快速开发可以使用注解
         -->
        <!-- <mapper resource="mybatis/mapper/EmployeeMapper.xml"/> -->
        <!-- <mapper class="com.yuehai.mybatis.dao.EmployeeMapper" /> -->
        
        <!-- 批量注册 -->
        <!-- sql 映射文件必须和接口同名，并且放在与接口同一目录下 -->
        <package name="com.yuehai.mybatis.dao"/>
    </mappers>

</configuration>